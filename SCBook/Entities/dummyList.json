[
    {
        "imageName": "listButton",
        "title": "Button",
        "introduce": "You can create variable style of button",
        "hig": {
            "imageName": "button",
            "title": "Button",
            "subtitle": "Controls",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "**<System Button>**\n\n**1. 버튼의 기능을 즉시 이해할 수 있게끔 구성해라.**\n- 글리프(or 아이콘), 제목 또는 둘 다를 사용하여 버튼의 목적을 전달.\n- 글리프의 경우 기존 or 사용자 정의 SF기호 사용을 고려.\n\n**2. 유용한 세부정보를 제공하는 경우 Subtitle을 포함해라.**\n\n**3. 즉시 완료되지않는 작업이라면 Activity Indicator를 표시하는 버튼을 구성해라.**\n- 기존 버튼 이미지 -> 버퍼링으로.\n- 버퍼링 대신 Text...형태로 나타내는 것도 좋은 방법.\n\n**4. Filled Button의 경우 View에서 가장 선택될 가능성이 높은 작업에 대해 사용해라.**\n- 채워진(강조된)버튼이 너무 많을 경우, 사용자가 여러 옵션을 비교하는데 시간을 소비하게 되버린다.\n\n**<Toggle Button>**\n\n- **켜기 및 끄기 또는 표시 및 숨기기와 같은 반대상태쌍 사이를 전환하는 버튼 유형.**\n\n- Toggle은 Switch와 비슷하지만 목적을 설명하는 Label을 제공할 필요가 없음.\n\n- 상태관리 작업에 주로 사용.\n\n- **토글의 상태를 전달할 때 너무 색상에만 의존하지 말것.** 모든 사람이 시각적 차이를 인지할 수 있도록, 색상변화 이외의 다른 시각적 변경사항도 포함할 수 있음.\n\n**<닫기 Button>**\n\n- **View내에서 닫기버튼과 완료버튼을 동시 제공하지는 말 것.** 서로 유사한 동작을 기대하는데 따로 놓으면 혼란을 야기할 수 있음.\n\n**<그 외 주요 주의사항>**\n\n- **버튼의 형태**와 **탭했을 때 기대할 수 있는 효과를 일치시키는 것이 중요.** 사용자가 예상한 동작과 다르게 흐른다면 혼란스러워 할 수 있음."
        }
    },
    {
        "imageName": "listBackground",
        "title": "Background",
        "introduce": "There are variable concepts of background"
    },
    {
        "imageName": "listTextField",
        "title": "TextField",
        "introduce": "clear button & watch button in Field",
        "hig": {
            "imageName": "textField",
            "title": "TextField",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "**<Text&SecureField>**\n\n**- 한 줄의 텍스트를 작성하는 Field**\n\n**1. 목적을 전달하는데 도움이 되도록 placeholder를 표시.**\n\n**2. 사람들이 입력한 내용을 지울 수 있도록 TextField의 후미에 지우기 버튼을 두는 것.**\n\n**3. 비밀번호 등 민감함 데이터 입력 시 SecureField를 사용해야함.**\n\n**4. 이미지와 버튼을 사용하여 TextField에 기능의 명확성을 제공할 수도 있음.**\n- TextField의 양쪽 끝에 사용자 정의 이미지를 표시하거나 Bookmark Button과 같은 시스템제공버튼을 추가할 수도 있습니다.\n- 일반적으로 선행에 필드의 목적을 나타내고, 후행에 책갈피 등 기능을 제공합니다."
        }
    },
    {
        "imageName": "listlist",
        "title": "List",
        "introduce": "Basic ~ Custom style of list",
        "hig": {
            "imageName": "button",
            "title": "List",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "The system offers a range of button styles that support extensive customization while providing built-in interaction states, accessibility support, and appearance adaptation. In addition, there are several system-defined button types — such as toggle, pop-up, and pull-down — that support a variety of specific use cases."
        }
    },
    {
        "imageName": "listSegmentedBar",
        "title": "SegmentedBar",
        "introduce": "Amazing segmentedBar styles",
        "hig": {
            "imageName": "button",
            "title": "SegmentedBar",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "**<Segmented Controls>**\n\n- 각각 상호배타적인 버튼으로 기능하는 두 개 이상의 Segment로 구성된 세트.\n\n**- Segment 수는 5개 이하로 제한.**\n\n- 세그먼트 콘텐츠 크기를 일관되게 유지해야함."
        }
    },
    {
        "imageName": "listText",
        "title": "Text",
        "introduce": "font & fontWeight & mask & custom fonts",
        "hig": {
            "imageName": "text",
            "title": "Text",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "**<Typography>**\n\n- Apple은 SF시리즈, NY 등 두 가지 유형의 Font제품군을 제공함.\n\n**- 앱 향상을 위한 Font 선택**\n\n1. 가능하면 **내장된 텍스트 스타일**을 사용.\n\n2. 중요한 정보 Text는 **강조**.\n\n3. 텍스트 크기 변경에 응답할 때 우선 순위를 지정.\n\n4. 인터페이스에서 사용하는 **서체의 수를 최소화**.\n\n5. 가독성을 높이거나 공간을 절약하기 위해 **행간**을 수정. 또한 Text는 모든 크기에서 읽을 수 있도록 해야함.\n\n6. 사용자 정의 Font를 가독성 및 깨짐이 없는지 확인."
        }
    },
    {
        "imageName": "listImage",
        "title": "Image",
        "introduce": "Check about image's HIG",
        "hig": {
            "imageName": "button",
            "title": "Image",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "The system offers a range of button styles that support extensive customization while providing built-in interaction states, accessibility support, and appearance adaptation. In addition, there are several system-defined button types — such as toggle, pop-up, and pull-down — that support a variety of specific use cases."
        }
    },
    {
        "imageName": "listStepper",
        "title": "Stepper",
        "introduce": "Let's make custom style of stepper",
        "hig": {
            "imageName": "stepper",
            "title": "Stepper",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "- 값을 늘리거나 줄이는 데 사용되는 2-세그먼트 컨트롤입니다. 기본적으론 +, - 로 구성됩니다. 원하는 경우 이러한 기호를 사용자 정의 이미지로 교체할 수 있습니다.\n\n**<중요 포인트>**\n\n**1. Stepper의 영향을 받는 값을 명확하게 합니다.**\n\n**2. 값이 크게 변경될 가능성이 있는 경우 Stepper를 사용하지 마십시오.**\n\n**3. Stepper는 몇 번의 탭이 필요한 작은 변경 작업에 적합합니다.**"
        }
    },
    {
        "imageName": "listColor",
        "title": "Color",
        "introduce": "Precautions when dealing with color",
        "hig": {
            "imageName": "button",
            "title": "Color",
            "subtitle": "blabla",
            "introduce": "Let's see Human Interface Guidelines!",
            "description": "The system offers a range of button styles that support extensive customization while providing built-in interaction states, accessibility support, and appearance adaptation. In addition, there are several system-defined button types — such as toggle, pop-up, and pull-down — that support a variety of specific use cases."
        }
    },
    {
        "imageName": "listLayoutStyle",
        "title": "LayoutStyle",
        "introduce": "Let's see compositinal layout style!"
    }
]
